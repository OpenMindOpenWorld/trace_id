# GitHub Actions workflow for automating the release process.
#
# This workflow is based on the practices from the supabase-jwt repository.
# It uses `cargo-release` to automate version bumping, tagging, publishing to
# crates.io, and pushing changes back to the repository.
#
# This workflow must be triggered manually from the GitHub Actions UI.

name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to release (e.g., 0.2.0)'
        required: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history so that cargo-release can determine the next version
          fetch-depth: 0

      # 2. Install the stable Rust toolchain
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      # 3. Install cargo-release, a tool for automating the release process
      - name: Install cargo-release
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          # Cache cargo-release binary to speed up future runs
          key: cargo-release-binary
          
      - run: cargo install cargo-release

      # 4. Configure Git with user name and email
      #    This is necessary for cargo-release to create a commit on your behalf.
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      # 5. Run cargo release
      #    This command will:
      #    - Bump the version in Cargo.toml to the specified version.
      #    - Create a new git commit and tag.
      #    - Publish the crate to crates.io.
      #    - Push the new commit and tag to the repository.
      - name: Run cargo release
        env:
          # The token is required to publish to crates.io
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo release ${{ github.event.inputs.version }} --execute --verbose
